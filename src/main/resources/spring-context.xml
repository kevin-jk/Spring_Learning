<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <context:component-scan base-package="com.kun.leanring.spring.*"/>

    <bean id="flagService" class="com.kun.leanring.spring.event.FlagService"/>

    <!--<bean name="timeAop" class="org.springframework.aop.framework.ProxyFactoryBean">-->
        <!--<property name="target">-->
            <!--<ref bean="computeServiceImpl"></ref>-->
        <!--</property>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>timeSpendLogger</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="interfaces">-->
            <!--<value>com.kun.leanring.spring.aop.service.ComputeService</value>-->
        <!--</property>-->
    <!--</bean>-->



    <!--AspectJ    poxy-target-class="true"CGLib动态代理技术织入增强 -->
    <aop:aspectj-autoproxy/>


    <!--
     aop config: aop配置相关内容开始
     aop:aspect 声明一个简单的切面，此处将logService声明为一个切面
     aop:before 声明切面的不同通知类型
       -->
    <!--<aop:config>-->
        <!--<aop:aspect ref="logService">-->
            <!--<aop:pointcut id="pay" expression="execution(** com.kun.leanring.spring.usageaop.service.PayCoreServiceFacade.pay(..))"/>-->
            <!--<aop:before pointcut-ref="pay" method="beforeLog"/>-->
            <!--<aop:after pointcut-ref="pay" method="afterLog"/>-->
            <!--<aop:after-returning pointcut-ref="pay" method="afterReturningLog"/>-->
            <!--<aop:after-throwing pointcut-ref="pay" method="afterThrowingLog"/>-->
            <!--<aop:around pointcut-ref="pay" method="aroundLog"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->
</beans>